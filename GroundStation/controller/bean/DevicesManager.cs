///////////////////////////////////////////////////////////
//  devices.cs
//  Implementation of the Class devices
//  Generated by Enterprise Architect
//  Created on:      16-фев-2013 16:40:42
//  Original author: Ostrovskiy Ihor
///////////////////////////////////////////////////////////
using System.Data;
using System;
using Npgsql;
using log4net;
using log4net.Config;
using System.Linq;
using GroundStation.model.entity.telerik;

namespace controller
{
    /// <summary>
    /// Таблиця з переліком систем (підсистема радіомодулю, центральна,
    /// енергозабезпечення...)
    /// </summary>
    public class DevicesManager
    {

        public static readonly ILog log = LogManager.GetLogger(typeof(DevicesManager));
        private DataSet ds = new DataSet();
        NpgsqlDataAdapter da;    

        public DevicesManager()
        {

        }

        public DataTable getDivices()
        {
            NpgsqlConnection conn = ConnectionManager.getConnection();
            try
            {
                string sql = "SELECT * FROM devices";
                // data adapter making request from our connection
                da = new NpgsqlDataAdapter(sql, conn);
                // i always reset DataSet before i do something with it.... i don't know why :-)
                ds.Reset();
                // filling DataSet with result from NpgsqlDataAdapter
                da.Fill(ds);

                // set header name for table
                ds.Tables[0].Columns["id"].ColumnName = "Ідентифікатор";
                ds.Tables[0].Columns["name"].ColumnName = "Назва системи";
                ds.Tables[0].Columns["description"].ColumnName = "Опис";
                ds.Tables[0].Columns["modbus_address"].ColumnName = "Modbus адреса";
                // since it C# DataSet can handle multiple tables, we will select first
                return ds.Tables[0];
            }
            catch (Exception e)
            {
                log.Error(e.Message, e);
            }
            finally
            {
                if (conn != null)
                    conn.Close();
            }
            return null;
        }

        public DataTable getDivicesSimple()
        {
            NpgsqlConnection conn = ConnectionManager.getConnection();
            try
            {
                string sql = "SELECT id, name FROM devices";
                // data adapter making request from our connection
                da = new NpgsqlDataAdapter(sql, conn);
                // i always reset DataSet before i do something with it.... i don't know why :-)
                ds.Reset();
                // filling DataSet with result from NpgsqlDataAdapter
                da.Fill(ds);

                // set header name for table
                // ds.Tables[0].Columns["id"].ColumnName = "Ідентифікатор";
                // ds.Tables[0].Columns["name"].ColumnName = "Назва системи";
                // since it C# DataSet can handle multiple tables, we will select first
                return ds.Tables[0];
            }
            catch (Exception e)
            {
                log.Error(e.Message, e);
            }
            finally
            {
                if (conn != null)
                    conn.Close();
            }
            return null;
        }

        public Device getDivice(long _id)
        {
            try
            {
                return ConnectionManager.getEntities().Devices.Where(d => d.Id == _id).FirstOrDefault();
            }
            catch (Exception e)
            {
                log.Error(e.Message, e);
            }
            return null;
        }

        public Boolean addDivice(Device dev)
        {
            try
            {
                ConnectionManager.getEntities().Add(dev);
                ConnectionManager.getEntities().SaveChanges();
                return true;
            }
            catch (Exception e)
            {
                log.Error(e.Message, e);
            }

            return false;
        }

        public Boolean deleteDivice(int id_)
        {
            NpgsqlConnection conn = ConnectionManager.getConnection();
            try
            {
                string sql = "DELETE FROM devices WHERE id=:id";
                NpgsqlCommand cmd = new NpgsqlCommand(sql, conn);

                cmd.Parameters.Add(":id", NpgsqlTypes.NpgsqlDbType.Smallint).Value = id_;

                cmd.ExecuteNonQuery();
                return true;
            }
            catch (Exception e)
            {
                log.Error(e.Message, e);
            }
            finally
            {
                if (conn != null)
                    conn.Close();
            }
            return false;
        }

    }//end Devices

}//end namespace GraundStationDB