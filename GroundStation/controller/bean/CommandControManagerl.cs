///////////////////////////////////////////////////////////
//  DaoCommandControl.cs
//  Implementation of the Class CommandControl
//  Generated by Enterprise Architect
//  Created on:      16-фев-2013 16:41:19
//  Original author: Ostrovskiy Ihor
///////////////////////////////////////////////////////////
using System.Data;
using System;
using Npgsql;
using log4net;
using log4net.Config;
using System.Collections.Generic;
using System.Linq;
using GroundStation.model.entity.telerik;

namespace controller
{
    /// <summary>
    /// Список операцій які виконуються під час сеансу звязку
    /// </summary>
    public class CommandControlManager
    {
        public static readonly ILog log = LogManager.GetLogger(typeof(CommandControlManager));

        public Command_control getCommandControl(long? so_id)
        {
            try
            {
                return ConnectionManager.getEntities().Command_controls.Where(c => c.Session_operation_id == so_id).FirstOrDefault();
            }
            catch (Exception e)
            {
                log.Error(e.Message, e);
            }
            return null;
        }

        public List<Command_control> getCommandControlList(long? so_id)
        {
            try
            {
                return ConnectionManager.getEntities().Command_controls.Where(c => c.Session_operation_id == so_id).ToList();
            }
            catch (Exception e)
            {
                log.Error(e.Message, e);
            }
            return null;
        }

        public Boolean addCommandControlList(List<Command_control> ccl)
        {
            try
            {
                foreach (Command_control cc in ccl)
                {
                    ConnectionManager.getEntities().Add(cc);
                    ConnectionManager.getEntities().SaveChanges();
                }
                return true;
            }
            catch (Exception e)
            {
                log.Error(e.Message, e);
            }
            return false;
        }

        public Boolean addCommandControlList(Int32 session_operation_id, List<Command_control> ccl)
        {
            try
            {
                foreach (Command_control cc in ccl)
                {
                    cc.Session_operation_id = session_operation_id;
                    ConnectionManager.getEntities().Add(cc);
                    ConnectionManager.getEntities().SaveChanges();
                }
                return true;
            }
            catch (Exception e)
            {
                log.Error(e.Message, e);
            }
            return false;
        }

        public Boolean deleteCommandControl(long session_operation_id)
        {
            //var query = from cc in DaoConnection.getSatelliteEntities().command_control where cc.session_operation_id == session_operation_id select cc;
            //DaoConnection.getSatelliteEntities().command_control.Where(cc => cc.session_operation_id == session_operation_id).ToList().ForEach(DaoConnection.getSatelliteEntities().command_control.DeleteObject);
            NpgsqlConnection conn = ConnectionManager.getConnection();
            try
            {
                string sql = "DELETE FROM command_control WHERE session_operation_id=:session_operation_id";
                NpgsqlCommand cmd = new NpgsqlCommand(sql, conn);
                cmd.Parameters.Add(":session_operation_id", NpgsqlTypes.NpgsqlDbType.Bigint).Value = session_operation_id;
                cmd.ExecuteNonQuery();
                return true;
            }
            catch (Exception e)
            {
                log.Error(e.Message, e);
            }
            finally
            {
                if (conn != null)
                    conn.Close();
            }
            return false;
        }
    }

}