///////////////////////////////////////////////////////////
//  telemetry_data.cs
//  Implementation of the Class telemetry_data
//  Generated by Enterprise Architect
//  Created on:      16-фев-2013 16:41:27
//  Original author: Ostrovskiy Ihor
///////////////////////////////////////////////////////////
using System.Data;
using System;
using Npgsql;
using log4net;
using log4net.Config;
using System.Collections.Generic;
using System.Linq;
using GroundStation.model.entity.telerik;

namespace controller
{
    /// <summary>
    /// Таблиця з даними телеметрії
    /// </summary>
    public class TelemetryDataManager
    {

        public static readonly ILog log = LogManager.GetLogger(typeof(SessionOperationListManager));
        private DataSet ds = new DataSet();


        public Boolean addTelemetryData(Telemetry_data_arragment tda)
        {
            try
            {
                ConnectionManager.getEntities().Add(tda);
                ConnectionManager.getEntities().SaveChanges();
                return true;
            }
            catch (Exception e)
            {
                log.Error(e.Message, e);
            }
            return false;
        }

        public Boolean deleteTelemetryData(int id_)
        {
            NpgsqlConnection conn = ConnectionManager.getConnection();
            try
            {
                string sql = "DELETE FROM telemetry_data_arragment WHERE id=:id";
                NpgsqlCommand cmd = new NpgsqlCommand(sql, conn);

                cmd.Parameters.Add(":id", NpgsqlTypes.NpgsqlDbType.Bigint).Value = id_;

                cmd.ExecuteNonQuery();
                return true;
            }
            catch (Exception e)
            {
                log.Error(e.Message, e);
            }
            finally
            {
                if (conn != null)
                    conn.Close();
            }
            return false;
        }

        public Telemetry_data_arragment getTelemetryDataById(int _id)
        {
            try
            {
                return ConnectionManager.getEntities().Telemetry_data_arragments.Where(t => t.Id == _id).Single();
            }
            catch (Exception e)
            {
                log.Error(e.Message, e);
            }

            return null;
        }

        public Telemetry_data_arragment getTelemetryDataByOperationGroupIdAndSessionOperationGroupId(int operation_group_id, int session_operation_group_id)
        {
            try
            {
                return ConnectionManager.getEntities().Telemetry_data_arragments.Where(t => t.Operation_group_id == operation_group_id && t.Session_operation_group_id == session_operation_group_id).Single();
            }
            catch (Exception e)
            {
                log.Error(e.Message, e);
            }

            return null;
        }
    }
}//end namespace GraundStationDB